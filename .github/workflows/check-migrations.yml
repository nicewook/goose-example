name: Check New Migration Timestamps

on:
  pull_request:
    branches:
      - main

jobs:
  check-timestamp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Find the latest existing migration timestamp
        id: latest-timestamp
        run: |
          LATEST_TIMESTAMP=$(ls ./db/migrations/*.sql | xargs -n1 basename | sed 's/\([0-9]\+\).*/\1/' | sort -nr | head -n1)
          echo "The latest existing migration timestamp is $LATEST_TIMESTAMP"
          echo "LATEST_TIMESTAMP=$LATEST_TIMESTAMP" >> $GITHUB_ENV

      - name: Check new migration files timestamp
        run: |
          NEW_FILES=$(git diff --name-only --diff-filter=A ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} ./db/migrations | xargs -n1 basename)
          for FILE in $NEW_FILES; do
            NEW_TIMESTAMP=$(echo $FILE | sed 's/\([0-9]\+\).*/\1/')
            if [[ $NEW_TIMESTAMP -le $LATEST_TIMESTAMP ]]; then
              echo "Error: New migration file $FILE has a timestamp not later than the latest existing migration."
              echo "The new migration timestamp must be later than $LATEST_TIMESTAMP."
              exit 1
            fi
          done
          echo "All new migration files have valid timestamps."
