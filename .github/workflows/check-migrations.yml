name: Check SQL Migrations Timestamp

on:
  pull_request:
    branches:
      - develop

jobs:
  check-migration-timestamp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Find latest timestamp in develop
        id: develop_timestamp
        run: |
          LATEST_MERGED_TIMESTAMP=$(git ls-files db/migrations/*.sql | xargs -I {} basename {} | cut -d '_' -f 1 | sort -n | tail -n 1)
          echo "Latest merged timestamp in develop: $LATEST_MERGED_TIMESTAMP"
          echo "::set-output name=timestamp::$LATEST_MERGED_TIMESTAMP"

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Check PR migration timestamps
        run: |
          PR_EARLIEST_TIMESTAMP=$(git diff --name-only ${{ github.base_ref }}...${{ github.head_ref }} | grep 'db/migrations/.*\.sql' | xargs -I {} basename {} | cut -d '_' -f 1 | sort -n | head -n 1)
          
          if [[ ! -z "$PR_EARLIEST_TIMESTAMP" && "$PR_EARLIEST_TIMESTAMP" -le "${{ steps.develop_timestamp.outputs.timestamp }}" ]]; then
            echo "A more recent migration file already exists in the develop branch. Please update your migration file timestamp."
            echo "PR earliest timestamp: $PR_EARLIEST_TIMESTAMP"
            echo "Latest merged timestamp in develop: ${{ steps.develop_timestamp.outputs.timestamp }}"
            exit 1
          else
            echo "PR migration timestamp is valid."
          fi
